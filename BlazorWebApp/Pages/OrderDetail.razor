@page "/order-detail"
@page "/order/{orderId}"

<PageTitle>Order Detail - #@OrderId</PageTitle>

<link href="css/order-detail.css" rel="stylesheet" />

<div class="order-detail-container">
    <div class="breadcrumb">
        <div class="container">
            <a href="/">Home</a> / <a href="/orders">Orders</a> / <span>Order #@OrderId</span>
        </div>
    </div>

    <div class="container">
        <div class="order-header">
            <div class="order-title">
                <h1>Order <span class="order-number">#@OrderId</span></h1>
                <p class="order-date">Placed on @OrderDate.ToString("MMMM dd, yyyy")</p>
            </div>
            <div class="order-actions">
                <a href="/orders" class="back-button">
                    <i class="fa fa-arrow-left"></i> Back to Orders
                </a>
            </div>
        </div>

        <div class="order-card">
            <div class="card-header">
                <h2>Order Status</h2>
            </div>
            <div class="card-body">
                <div class="order-status-tracker">
                    <div class="status-step @(OrderStatusStep >= 1 ? "completed" : "")">
                        <div class="status-icon">
                            <i class="fa fa-check"></i>
                        </div>
                        <div class="status-label">Order Placed</div>
                    </div>
                    <div class="status-line @(OrderStatusStep >= 2 ? "completed" : "")"></div>
                    <div class="status-step @(OrderStatusStep >= 2 ? "completed" : "")">
                        <div class="status-icon">
                            <i class="fa fa-check"></i>
                        </div>
                        <div class="status-label">Processing</div>
                    </div>
                    <div class="status-line @(OrderStatusStep >= 3 ? "completed" : "")"></div>
                    <div class="status-step @(OrderStatusStep >= 3 ? "completed" : "")">
                        <div class="status-icon">
                            <i class="fa fa-check"></i>
                        </div>
                        <div class="status-label">Shipped</div>
                    </div>
                    <div class="status-line @(OrderStatusStep >= 4 ? "completed" : "")"></div>
                    <div class="status-step @(OrderStatusStep >= 4 ? "completed" : "")">
                        <div class="status-icon">
                            <i class="fa fa-check"></i>
                        </div>
                        <div class="status-label">Delivered</div>
                    </div>
                </div>

                @if (DeliveryDate.HasValue)
                {
                    <div class="delivery-date">
                        <span>Delivered on @DeliveryDate.Value.ToString("MMMM dd, yyyy")</span>
                    </div>
                }
                else if (EstimatedDelivery.HasValue)
                {
                    <div class="estimated-delivery">
                        <span>Estimated delivery: @EstimatedDelivery.Value.ToString("MMMM dd, yyyy")</span>
                    </div>
                }
            </div>
        </div>

        <div class="order-details-grid">
            <div class="shipping-information">
                <div class="card-header">
                    <h2>Shipping Information</h2>
                </div>
                <div class="card-body">
                    <div class="customer-details">
                        <h3>@ShippingAddress.Name</h3>
                        <p>@ShippingAddress.Street</p>
                        <p>Apt @ShippingAddress.Apt</p>
                        <p>@ShippingAddress.City, @ShippingAddress.State @ShippingAddress.ZipCode</p>
                        <p>@ShippingAddress.Country</p>
                        <p>Phone: @ShippingAddress.Phone</p>
                    </div>
                    <div class="shipping-details">
                        <div class="detail-row">
                            <span class="detail-label">Shipping Method:</span>
                            <span class="detail-value">@ShippingMethod</span>
                        </div>
                        @if (!string.IsNullOrEmpty(TrackingNumber))
                        {
                            <div class="detail-row">
                                <span class="detail-label">Tracking Number:</span>
                                <span class="detail-value tracking-number">@TrackingNumber</span>
                            </div>
                        }
                    </div>
                </div>
            </div>

            <div class="billing-information">
                <div class="card-header">
                    <h2>Billing Information</h2>
                </div>
                <div class="card-body">
                    <div class="customer-details">
                        <h3>@BillingAddress.Name</h3>
                        <p>@BillingAddress.Street</p>
                        <p>Apt @BillingAddress.Apt</p>
                        <p>@BillingAddress.City, @BillingAddress.State @BillingAddress.ZipCode</p>
                        <p>@BillingAddress.Country</p>
                        <p>Phone: @BillingAddress.Phone</p>
                    </div>
                    <div class="payment-details">
                        <div class="detail-row">
                            <span class="detail-label">Payment Method:</span>
                            <span class="detail-value">@PaymentMethod</span>
                        </div>
                    </div>
                </div>
            </div>

            <div class="order-summary">
                <div class="card-header">
                    <h2>Order Summary</h2>
                </div>
                <div class="card-body">
                    <div class="summary-row">
                        <span class="summary-label">Subtotal:</span>
                        <span class="summary-value">$@Subtotal.ToString("F2")</span>
                    </div>
                    <div class="summary-row">
                        <span class="summary-label">Shipping:</span>
                        <span class="summary-value">$@ShippingCost.ToString("F2")</span>
                    </div>
                    <div class="summary-row">
                        <span class="summary-label">Tax:</span>
                        <span class="summary-value">$@Tax.ToString("F2")</span>
                    </div>
                    <div class="summary-row total">
                        <span class="summary-label">Total:</span>
                        <span class="summary-value">$@Total.ToString("F2")</span>
                    </div>
                </div>
            </div>
        </div>

        <div class="order-items">
            <div class="card-header">
                <h2>Order Items</h2>
            </div>
            <div class="card-body">
                <table class="items-table">
                    <thead>
                        <tr>
                            <th class="product-col">Product</th>
                            <th class="price-col">Price</th>
                            <th class="quantity-col">Quantity</th>
                            <th class="total-col">Total</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var item in OrderItems)
                        {
                            <tr>
                                <td class="product-col">
                                    <div class="product-info">
                                        <div class="product-image">
                                            <img src="@item.ImageUrl" alt="@item.Name" />
                                        </div>
                                        <div class="product-details">
                                            <h4 class="product-name">@item.Name</h4>
                                            <p class="product-sku">SKU: @item.SKU</p>
                                        </div>
                                    </div>
                                </td>
                                <td class="price-col">$@item.Price.ToString("F2")</td>
                                <td class="quantity-col">@item.Quantity</td>
                                <td class="total-col">$@((item.Price * item.Quantity).ToString("F2"))</td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        </div>

        <div class="order-actions-footer">
            <a href="/orders" class="btn btn-secondary back-to-orders">Back to Orders</a>
            <button class="btn btn-primary download-invoice">Download Invoice</button>
            <button class="btn btn-outline need-help">Need Help?</button>
        </div>
    </div>
</div>

@code {
    [Parameter]
    public string OrderId { get; set; } = "GRB-2025-1001";

    private DateTime OrderDate { get; set; } = new DateTime(2025, 1, 22);
    private DateTime? DeliveryDate { get; set; } = new DateTime(2025, 1, 25);
    private DateTime? EstimatedDelivery { get; set; } = null;
    private int OrderStatusStep { get; set; } = 4; // 1: Placed, 2: Processing, 3: Shipped, 4: Delivered

    private string ShippingMethod { get; set; } = "Standard Delivery";
    private string TrackingNumber { get; set; } = "GRB10014567891US";
    private string PaymentMethod { get; set; } = "Credit Card (ending in 4567)";

    private decimal Subtotal { get; set; } = 150.00m;
    private decimal ShippingCost { get; set; } = 12.00m;
    private decimal Tax { get; set; } = 0.00m;
    private decimal Total => Subtotal + ShippingCost + Tax;

    private class Address
    {
        public string Name { get; set; }
        public string Street { get; set; }
        public string Apt { get; set; }
        public string City { get; set; }
        public string State { get; set; }
        public string ZipCode { get; set; }
        public string Country { get; set; }
        public string Phone { get; set; }
    }

    private Address ShippingAddress { get; set; } = new Address
    {
        Name = "John Doe",
        Street = "123 Main Street",
        Apt = "4B",
        City = "New York",
        State = "NY",
        ZipCode = "10001",
        Country = "United States",
        Phone = "(555) 123-4567"
    };

    private Address BillingAddress { get; set; } = new Address
    {
        Name = "John Doe",
        Street = "123 Main Street",
        Apt = "4B",
        City = "New York",
        State = "NY",
        ZipCode = "10001",
        Country = "United States",
        Phone = "(555) 123-4567"
    };

    private class OrderItem
    {
        public string Name { get; set; }
        public string SKU { get; set; }
        public string ImageUrl { get; set; }
        public decimal Price { get; set; }
        public int Quantity { get; set; }
    }

    private List<OrderItem> OrderItems { get; set; } = new List<OrderItem>
    {
        new OrderItem
        {
            Name = "Women's wallet Hand Purse",
            SKU = "WAP-001",
            ImageUrl = "images/products/wallet.jpg",
            Price = 70.00m,
            Quantity = 1
        },
        new OrderItem
        {
            Name = "Rose Gold Earring",
            SKU = "RGE-002",
            ImageUrl = "images/products/earring.jpg",
            Price = 80.00m,
            Quantity = 1
        }
    };

    protected override void OnInitialized()
    {
        // In a real application, you'd fetch the order details based on the OrderId parameter
        if (!string.IsNullOrEmpty(OrderId))
        {
            // Fetch order details from a service
            // For now, we're using mock data
        }
    }
}
