@page "/admin"
@page "/admin/dashboard"
@using MudBlazor
@using MudBlazor.Charts
@layout _AdminLayout
@* @attribute [Authorize(Roles = "Seller")] *@
@attribute [Authorize(Roles = "Admin,Seller")]
<PageTitle>Admin Dashboard - Grabit</PageTitle>

<MudText Typo="Typo.h4" Class="mb-4">Dashboard Overview</MudText>

<!-- Stats Cards -->
<MudGrid Spacing="2">
    <MudItem xs="12" sm="6" md="3">
        <MudPaper Elevation="0" Class="pa-4" Style="height: 100%; background-color: white; border-radius: 4px;">
            <MudText Typo="Typo.body2" Color="Color.Secondary">Total Sales</MudText>
            <MudText Typo="Typo.h5" Style="margin-top: 8px; margin-bottom: 8px;">$24,780</MudText>
            <MudStack Row="true" AlignItems="AlignItems.Center">
                <MudIcon Icon="@Icons.Material.Filled.TrendingUp" Color="Color.Success" Size="Size.Small" />
                <MudText Typo="Typo.caption" Color="Color.Success">12.5% from last month</MudText>
            </MudStack>
            <div style="position: absolute; top: 20px; right: 20px;">
                <MudAvatar Color="Color.Success" Size="Size.Medium" Style="background-color: #5CAF90;">
                    <MudIcon Icon="@Icons.Material.Filled.AttachMoney" />
                </MudAvatar>
            </div>
        </MudPaper>
    </MudItem>
    
    <MudItem xs="12" sm="6" md="3">
        <MudPaper Elevation="0" Class="pa-4" Style="height: 100%; background-color: white; border-radius: 4px;">
            <MudText Typo="Typo.body2" Color="Color.Secondary">Total Orders</MudText>
            <MudText Typo="Typo.h5" Style="margin-top: 8px; margin-bottom: 8px;">1,482</MudText>
            <MudStack Row="true" AlignItems="AlignItems.Center">
                <MudIcon Icon="@Icons.Material.Filled.TrendingUp" Color="Color.Success" Size="Size.Small" />
                <MudText Typo="Typo.caption" Color="Color.Success">5.2% from last month</MudText>
            </MudStack>
            <div style="position: absolute; top: 20px; right: 20px;">
                <MudAvatar Color="Color.Info" Size="Size.Medium" Style="background-color: #3498DB;">
                    <MudIcon Icon="@Icons.Material.Filled.ShoppingCart" />
                </MudAvatar>
            </div>
        </MudPaper>
    </MudItem>
    
    <MudItem xs="12" sm="6" md="3">
        <MudPaper Elevation="0" Class="pa-4" Style="height: 100%; background-color: white; border-radius: 4px;">
            <MudText Typo="Typo.body2" Color="Color.Secondary">Total Users</MudText>
            <MudText Typo="Typo.h5" Style="margin-top: 8px; margin-bottom: 8px;">892</MudText>
            <MudStack Row="true" AlignItems="AlignItems.Center">
                <MudIcon Icon="@Icons.Material.Filled.TrendingUp" Color="Color.Success" Size="Size.Small" />
                <MudText Typo="Typo.caption" Color="Color.Success">4.3% from last month</MudText>
            </MudStack>
            <div style="position: absolute; top: 20px; right: 20px;">
                <MudAvatar Color="Color.Secondary" Size="Size.Medium" Style="background-color: #4B5966;">
                    <MudIcon Icon="@Icons.Material.Filled.People" />
                </MudAvatar>
            </div>
        </MudPaper>
    </MudItem>
    
    <MudItem xs="12" sm="6" md="3">
        <MudPaper Elevation="0" Class="pa-4" Style="height: 100%; background-color: white; border-radius: 4px;">
            <MudText Typo="Typo.body2" Color="Color.Secondary">Total Products</MudText>
            <MudText Typo="Typo.h5" Style="margin-top: 8px; margin-bottom: 8px;">154</MudText>
            <MudStack Row="true" AlignItems="AlignItems.Center">
                <MudIcon Icon="@Icons.Material.Filled.TrendingUp" Color="Color.Success" Size="Size.Small" />
                <MudText Typo="Typo.caption" Color="Color.Success">2.1% from last month</MudText>
            </MudStack>
            <div style="position: absolute; top: 20px; right: 20px;">
                <MudAvatar Color="Color.Warning" Size="Size.Medium" Style="background-color: #1ABC9C;">
                    <MudIcon Icon="@Icons.Material.Filled.Inventory" />
                </MudAvatar>
            </div>
        </MudPaper>
    </MudItem>
</MudGrid>

<!-- Charts Section -->
<MudGrid Class="mt-4">
    <MudItem xs="12" md="8">
        <MudPaper Elevation="0" Class="pa-4" Style="background-color: white; border-radius: 4px;">
            <MudGrid>
                <MudItem xs="6">
                    <MudText Typo="Typo.h6">Sales Analytics</MudText>
                </MudItem>
                <MudItem xs="6" Style="text-align: right;">
                    <MudSelect T="int" Value="@_selectedSalesPeriodInt" ValueChanged="@(value => UpdateSalesChart(value))" 
                              Label="Period" Dense="true" Style="max-width: 200px; display: inline-block; text-align: left;" 
                              Margin="Margin.Dense" Class="mt-n1" FullWidth="false">
                        <MudSelectItem Value="7">Last 7 Days</MudSelectItem>
                        <MudSelectItem Value="30">Last 30 Days</MudSelectItem>
                        <MudSelectItem Value="90">Last 90 Days</MudSelectItem>
                        <MudSelectItem Value="365">This Year</MudSelectItem>
                    </MudSelect>
                </MudItem>
            </MudGrid>
            
            <div style="height: 300px; margin-top: 12px;">
                <MudChart ChartType="ChartType.Line" ChartSeries="@_salesChartSeries" XAxisLabels="@_salesChartLabels" 
                          Width="100%" Height="300px" ChartOptions="@_chartOptions" />
            </div>
            <MudGrid Class="mt-3">
                <MudItem xs="12" Style="text-align: center;">
                    <MudStack Row="true" Justify="Justify.Center" AlignItems="AlignItems.Center">
                        <MudStack Row="true" AlignItems="AlignItems.Center" Class="mx-2">
                        </MudStack>
                        <MudStack Row="true" AlignItems="AlignItems.Center" Class="mx-2">
                            
                        </MudStack>
                    </MudStack>
                </MudItem>
            </MudGrid>
        </MudPaper>
    </MudItem>
    
    <MudItem xs="12" md="4">
        <MudPaper Elevation="0" Class="pa-4" Style="height: 100%; background-color: white; border-radius: 4px;">
            <MudGrid>
                <MudItem xs="6">
                    <MudText Typo="Typo.h6">Top Products</MudText>
                </MudItem>
                <MudItem xs="6" Style="text-align: right;">
                    <MudSelect T="int" Value="@_selectedProductsPeriodInt" ValueChanged="@(value => UpdateProductsChart(value))" 
                              Label="Period" Dense="true" Style="max-width: 200px; display: inline-block; text-align: left;" 
                              Margin="Margin.Dense" Class="mt-n1" FullWidth="false">
                        <MudSelectItem Value="7">Last 7 Days</MudSelectItem>
                        <MudSelectItem Value="30">Last 30 Days</MudSelectItem>
                        <MudSelectItem Value="90">Last 90 Days</MudSelectItem>
                        <MudSelectItem Value="365">This Year</MudSelectItem>
                    </MudSelect>
                </MudItem>
            </MudGrid>
            
            <div style="height: 300px; margin-top: 12px;">
                <MudChart ChartType="ChartType.Donut" InputData="@_productsChartData" InputLabels="@_productsChartLabels" 
                          Width="100%" Height="280px" />
            </div>
            <MudGrid Class="mt-3">
                <MudItem xs="12">
                    <MudStack Row="true" Justify="Justify.Center" AlignItems="AlignItems.Center" Wrap="@MudBlazor.Wrap.Wrap">
                        @for (int i = 0; i < _productsChartLabels.Length; i++)
                        {
                            var index = i;
                            <MudStack Row="true" AlignItems="AlignItems.Center" Class="mx-2 mb-1">
                                
                            </MudStack>
                        }
                    </MudStack>
                </MudItem>
            </MudGrid>
        </MudPaper>
    </MudItem>
</MudGrid>

<!-- Recent Orders Table -->
<MudGrid Class="mt-4">
    <MudItem xs="12">
        <MudPaper Elevation="0" Class="pa-4" Style="background-color: white; border-radius: 4px;">
            <MudGrid>
                <MudItem xs="6">
                    <MudText Typo="Typo.h6">Recent Orders</MudText>
                </MudItem>
                <MudItem xs="6" Style="text-align: right;">
                    <MudButton Variant="Variant.Text" Color="Color.Primary" EndIcon="@Icons.Material.Filled.KeyboardArrowRight"
                              Href="/admin/orders" Class="mt-n1">
                        VIEW ALL
                    </MudButton>
                </MudItem>
            </MudGrid>
            
            <div style="margin-top: 16px;">
                <MudTable Items="@_recentOrders" Hover="true" Striped="false" Bordered="false" Elevation="0" Dense="true">
                    <HeaderContent>
                        <MudTh Style="width: 100px">Order ID</MudTh>
                        <MudTh Style="width: 180px">Customer</MudTh>
                        <MudTh>Products</MudTh>
                        <MudTh Style="width: 120px">Date</MudTh>
                        <MudTh Style="width: 100px">Amount</MudTh>
                        <MudTh Style="width: 120px">Status</MudTh>
                        <MudTh Style="width: 60px"></MudTh>
                    </HeaderContent>
                    <RowTemplate>
                        <MudTd DataLabel="Order ID">@context.OrderId</MudTd>
                        <MudTd DataLabel="Customer">
                            <MudStack Row="true" AlignItems="AlignItems.Center" Spacing="2">
                                <MudAvatar Size="Size.Small" Image="@context.CustomerAvatarUrl" />
                                <MudText Typo="Typo.body2">@context.CustomerName</MudText>
                            </MudStack>
                        </MudTd>
                        <MudTd DataLabel="Products">@context.Products</MudTd>
                        <MudTd DataLabel="Date">@context.Date</MudTd>
                        <MudTd DataLabel="Amount">@context.Amount</MudTd>
                        <MudTd DataLabel="Status">
                            <MudChip T="string" Color="@GetStatusColor(context.Status)" Size="Size.Small" 
                                    Variant="Variant.Filled" Style="min-width: 90px; justify-content: center;">
                                @context.Status
                            </MudChip>
                        </MudTd>
                        <MudTd Style="width: 60px;">
                            <MudIconButton Icon="@Icons.Material.Filled.Visibility" Size="Size.Small" Color="Color.Default" />
                        </MudTd>
                    </RowTemplate>
                </MudTable>
            </div>
        </MudPaper>
    </MudItem>
</MudGrid>

<!-- Low Stock Products -->
<MudGrid Class="mt-4 mb-4">
    <MudItem xs="12">
        <MudPaper Elevation="0" Class="pa-4" Style="background-color: white; border-radius: 4px;">
            <MudGrid>
                <MudItem xs="6">
                    <MudText Typo="Typo.h6">Low Stock Products</MudText>
                </MudItem>
                <MudItem xs="6" Style="text-align: right;">
                    <MudButton Variant="Variant.Text" Color="Color.Primary" EndIcon="@Icons.Material.Filled.KeyboardArrowRight"
                              Href="/admin/products" Class="mt-n1">
                        VIEW ALL PRODUCTS
                    </MudButton>
                </MudItem>
            </MudGrid>
            
            <div style="margin-top: 16px;">
                <MudTable Items="@_lowStockProducts" Hover="true" Striped="false" Bordered="false" Elevation="0" Dense="true">
                    <HeaderContent>
                        <MudTh Style="width: 100px">Product ID</MudTh>
                        <MudTh>Product Name</MudTh>
                        <MudTh Style="width: 120px">Category</MudTh>
                        <MudTh Style="width: 80px">Price</MudTh>
                        <MudTh Style="width: 100px">Stock Left</MudTh>
                        <MudTh Style="width: 120px">Status</MudTh>
                        <MudTh Style="width: 120px"></MudTh>
                    </HeaderContent>
                    <RowTemplate>
                        <MudTd DataLabel="Product ID">@context.ProductId</MudTd>
                        <MudTd DataLabel="Product Name">
                            <MudStack Row="true" AlignItems="AlignItems.Center" Spacing="2">
                                <MudAvatar Size="Size.Small" Square="true" Image="@context.ProductImageUrl" />
                                <MudText Typo="Typo.body2">@context.ProductName</MudText>
                            </MudStack>
                        </MudTd>
                        <MudTd DataLabel="Category">@context.Category</MudTd>
                        <MudTd DataLabel="Price">@context.Price</MudTd>
                        <MudTd DataLabel="Stock Left">@context.StockLeft</MudTd>
                        <MudTd DataLabel="Status">
                            <MudChip T="string" Color="@GetStockStatusColor(context.Status)" Size="Size.Small" 
                                    Variant="Variant.Filled" Style="min-width: 90px; justify-content: center;">
                                @context.Status
                            </MudChip>
                        </MudTd>
                        <MudTd Style="width: 120px;">
                            <MudIconButton Icon="@Icons.Material.Filled.Edit" Size="Size.Small" Color="Color.Default" />
                            <MudIconButton Icon="@Icons.Material.Filled.AddCircle" Size="Size.Small" Color="Color.Success" />
                        </MudTd>
                    </RowTemplate>
                </MudTable>
            </div>
        </MudPaper>
    </MudItem>
</MudGrid>

@code {
    // Sales Chart Data
    private int _selectedSalesPeriodInt = 30;
    private string _selectedSalesPeriod = "30";
    private List<ChartSeries> _salesChartSeries = new();
    private string[] _salesChartLabels = new[] { "Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul" };
    private ChartOptions _chartOptions = new() 
    { 
        YAxisFormat = "$#,##0",
        InterpolationOption = InterpolationOption.Straight,
        ChartPalette = new string[] { "#5CAF90", "#2ecc71" }
    };
    
    // Products Chart Data
    private int _selectedProductsPeriodInt = 30;
    private string _selectedProductsPeriod = "30";
    private string[] _productsChartLabels = new[] { "Dried Fruits", "Fresh Fruits", "Vegetables", "Cookies", "Others" };
    private double[] _productsChartData = new double[] { 35, 25, 20, 15, 5 };
    private List<ChartSeries> _productsDonutSeries = new();
    private string[] _productColors = new[] { "#3498db", "#1abc9c", "#f1c40f", "#e67e22", "#34495e" };
    
    // Orders Data
    private List<OrderData> _recentOrders = new()
    {
        new OrderData
        {
            OrderId = "#ORD-7892",
            CustomerName = "John Doe",
            CustomerAvatarUrl = "/images/admin/avatar1.jpg",
            Products = "Mixed Nuts Berries Pack",
            Date = "May 1, 2023",
            Amount = "$55.00",
            Status = "Delivered"
        },
        new OrderData
        {
            OrderId = "#ORD-7891",
            CustomerName = "Jane Smith",
            CustomerAvatarUrl = "/images/admin/avatar2.jpg",
            Products = "Multi Grain Combo Cookies",
            Date = "April 30, 2023",
            Amount = "$30.00",
            Status = "Processing"
        },
        new OrderData
        {
            OrderId = "#ORD-7890",
            CustomerName = "Robert Johnson",
            CustomerAvatarUrl = "/images/admin/avatar3.jpg",
            Products = "Fresh Mango Juice Pack",
            Date = "April 30, 2023",
            Amount = "$55.00",
            Status = "Shipped"
        },
        new OrderData
        {
            OrderId = "#ORD-7889",
            CustomerName = "Emily Davis",
            CustomerAvatarUrl = "/images/admin/avatar4.jpg",
            Products = "Dates Value Fresh Pouch",
            Date = "April 29, 2023",
            Amount = "$65.00",
            Status = "Cancelled"
        },
        new OrderData
        {
            OrderId = "#ORD-7888",
            CustomerName = "Michael Wilson",
            CustomerAvatarUrl = "/images/admin/avatar5.jpg",
            Products = "Organic Apples",
            Date = "April 29, 2023",
            Amount = "$12.00",
            Status = "Delivered"
        }
    };
    
    // Products Data
    private List<ProductData> _lowStockProducts = new()
    {
        new ProductData
        {
            ProductId = "#PRD-421",
            ProductName = "Mixed Nuts Berries Pack",
            ProductImageUrl = "/images/products/mixed-nuts.jpg",
            Category = "Dried Fruits",
            Price = "$45.00",
            StockLeft = "5 units",
            Status = "Low Stock"
        },
        new ProductData
        {
            ProductId = "#PRD-318",
            ProductName = "Organic Apples",
            ProductImageUrl = "/images/products/mango.jpg",
            Category = "Fresh Fruits",
            Price = "$12.00",
            StockLeft = "8 units",
            Status = "Low Stock"
        },
        new ProductData
        {
            ProductId = "#PRD-287",
            ProductName = "Fresh Mango Juice Pack",
            ProductImageUrl = "/images/products/mango-juice.jpg",
            Category = "Drinks",
            Price = "$46.00",
            StockLeft = "3 units",
            Status = "Critical Stock"
        }
    };
    
    protected override void OnInitialized()
    {
        // Initialize sales chart data
        _salesChartSeries = new List<ChartSeries>()
        {
            new ChartSeries() { Name = "Revenue", Data = new double[] { 4500, 5900, 7000, 8100, 9500, 11000, 12000 } },
            new ChartSeries() { Name = "Profit", Data = new double[] { 2100, 3000, 3500, 4100, 4800, 5500, 6300 } }
        };
    }
    
    private void UpdateSalesChart(int value)
    {
        _selectedSalesPeriodInt = value;
        _selectedSalesPeriod = value.ToString();
    }
    
    private void UpdateProductsChart(int value)
    {
        _selectedProductsPeriodInt = value;
        _selectedProductsPeriod = value.ToString();
    }
    
    private Color GetStatusColor(string status)
    {
        return status switch
        {
            "Delivered" => Color.Success,
            "Processing" => Color.Info,
            "Shipped" => Color.Warning,
            "Cancelled" => Color.Error,
            _ => Color.Default
        };
    }
    
    private Color GetStockStatusColor(string status)
    {
        return status switch
        {
            "Low Stock" => Color.Warning,
            "Critical Stock" => Color.Error,
            "In Stock" => Color.Success,
            _ => Color.Default
        };
    }
    
    private Color GetProductColor(int index)
    {
        return index switch
        {
            0 => Color.Primary,
            1 => Color.Info,
            2 => Color.Warning,
            3 => Color.Error,
            _ => Color.Default
        };
    }
    
    // Data models
    private class OrderData
    {
        public string OrderId { get; set; }
        public string CustomerName { get; set; }
        public string CustomerAvatarUrl { get; set; }
        public string Products { get; set; }
        public string Date { get; set; }
        public string Amount { get; set; }
        public string Status { get; set; }
    }
    
    private class ProductData
    {
        public string ProductId { get; set; }
        public string ProductName { get; set; }
        public string ProductImageUrl { get; set; }
        public string Category { get; set; }
        public string Price { get; set; }
        public string StockLeft { get; set; }
        public string Status { get; set; }
    }
}
